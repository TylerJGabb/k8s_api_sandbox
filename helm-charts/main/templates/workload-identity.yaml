# https://github.com/GoogleCloudPlatform/k8s-config-connector/tree/master/samples/tutorials/workload-identity
{{- range .Values.pii_services }}
---
# create a k8s service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ . }}-ksa"
  namespace: terraform-managed-namespace
  annotations:
    iam.gke.io/gcp-service-account: "{{ . }}-gsa@{{ $.Values.project }}.iam.gserviceaccount.com"
---
# create a google service account
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  name: "{{ . }}-gsa"
spec:
  displayName: "Created with CC for {{ . }}"
---
# give the gsa permission to view data in bq
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: "{{ . }}-bq-data-viewer"
spec:
  resourceRef:
    kind: Project
    name: "{{ $.Values.project }}"
  member: "serviceAccount:{{ . }}-gsa@{{ $.Values.project }}.iam.gserviceaccount.com"
  role: roles/bigquery.dataViewer
---
# give the gsa permission to execute queries in bq
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: "{{ . }}-bq-user"
spec:
  resourceRef:
    kind: Project
    name: "{{ $.Values.project }}"
  member: "serviceAccount:{{ .}}-gsa@{{ $.Values.project }}.iam.gserviceaccount.com"
  role: roles/bigquery.user
---
# setup workload identity for the ksa
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: "{{ . }}-workload-identity-policy"
spec:
  resourceRef:
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
    name: "{{ . }}-gsa"
  role: roles/iam.workloadIdentityUser
  member: "serviceAccount:{{ $.Values.project }}.svc.id.goog[terraform-managed-namespace/{{ . }}-ksa]"
---
# create a deployment using the service account
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: "{{ . }}-deploy"
  name: "{{ . }}-deploy"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ . }}-deploy"
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: "{{ . }}-deploy"
    spec:
      containers:
        - image: google/cloud-sdk
          name: "{{ . }}-container"
          resources: {}
          command: ["/bin/bash", "-c", "--"]
          args: ["while true; do sleep 30; done;"]
      serviceAccountName: "{{ . }}-ksa"
---
# create a service pointing to the deployment
apiVersion: v1
kind: Service
metadata:
  name: "{{ . }}-svc"
  labels:
    app: "{{ . }}-svc"
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: "{{ . }}-deploy"
---
{{- end }}
